<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:NiansiThemes.Wpf"
                    xmlns:converters="clr-namespace:NiansiThemes.Wpf.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/NiansiThemes.Wpf;component/Themes/WindowCommands.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <converters:ThicknessBindingConverter x:Key="ThicknessBindingConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <ControlTemplate x:Key="WindowTemplateKey" TargetType="wpf:NiansiWindow">
        <Grid Background="{TemplateBinding Background}"
              LayoutTransform="{Binding LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
              RenderTransform="{Binding RenderTransform, RelativeSource={RelativeSource TemplatedParent}}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              UseLayoutRounding="True">
            <AdornerDecorator>
                <Border
                    UseLayoutRounding="False"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid UseLayoutRounding="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid
                            x:Name="WindowTitleBar"
                            Height="{TemplateBinding WindowTitleBarHeight}"
                            Background="{TemplateBinding WindowTitleBarBackground}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!--  主窗体应用程序图标  -->
                            <ContentPresenter 
                                x:Name="WindowIcon"
                                Grid.Column="0"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="1"
                                Content="{Binding WindowIcon, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                ContentTemplate="{TemplateBinding IconTemplate}"
                                Focusable="False"/>
                            <!--  主窗体标题  -->
                            <ContentPresenter 
                                x:Name="WindowTitle"
                                Grid.Column="1"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="1"
                                Content="{TemplateBinding Title}"
                                ContentTemplate="{TemplateBinding WindowTitleTemplate}"
                                Focusable="False"/>
                            <!--  主窗体左侧自定义功能按钮  -->
                            <ContentPresenter
                                x:Name="LeftWindowCommands"
                                Grid.Column="2"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="1"
                                Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False"/>
                            <!--  主窗体右侧自定义功能按钮  -->
                            <ContentPresenter
                                x:Name="RightWindowCommands"
                                Grid.Column="3"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Right"
                                Panel.ZIndex="1"
                                Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False"/>
                            <!--  主窗体最小化/最大化/关闭按钮  -->
                            <ContentPresenter
                                x:Name="WindowButtonCommands"
                                Grid.Column="4"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Panel.ZIndex="1"
                                Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False"/>
                        </Grid>
                        <Grid x:Name="WindowContent"
                            Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!--  主窗体左侧菜单背景颜色  -->
                            <Grid x:Name="HamburgerMenuBackground"
                                  Background="{TemplateBinding HamburgerMenuBackground}"/>
                            <!--  主窗体内容背景颜色  -->
                            <Grid x:Name="WindowContentBackground"
                                  Grid.Column="1"
                                  Background="{TemplateBinding Background}"/>
                            <!--  主窗体左侧菜单  -->
                            <ContentPresenter
                                x:Name="HamburgerMenuBox"
                                HorizontalAlignment="Left"
                                Panel.ZIndex="1"
                                Content="{Binding HamburgerMenuBox, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Focusable="False"/>
                            <!--  主窗体内容  -->
                            <wpf:NiansiContentControl
                                x:Name="NiansiContentControl"
                                Grid.Column="1"
                                FocusVisualStyle="{x:Null}"
                                IsTabStop="False"
                                OnlyLoadTransition="True"
                                TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                UseLayoutRounding="True">
                                <ContentPresenter
                                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static converters:ThicknessSideType.Top}}" 
                                    UseLayoutRounding="False" />
                            </wpf:NiansiContentControl>
                        </Grid>
                    </Grid>
                </Border>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>

    <Style TargetType="wpf:NiansiWindow">
        <Setter Property="WindowStyle" Value="None"/>
        <!--  AllowsTransparency会消耗较大的系统资源  -->
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="WindowTitleBarHeight" Value="30"/>
        <Setter Property="WindowTitleForeground" Value="{DynamicResource IdealForegroundColorBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush2}"/>
        <Setter Property="WindowTitleBarBackground" Value="{DynamicResource AccentColorBrush2}"/>
        <Setter Property="HamburgerMenuBackground" Value="{DynamicResource AccentColorBrush3}"/>
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
        <Setter Property="WindowTitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="8 -1 1 0"
                        VerticalAlignment="Center"
                        Foreground="{Binding WindowTitleForeground, RelativeSource={RelativeSource AncestorType=wpf:NiansiWindow}}"
                        FontSize="{DynamicResource WindowTitleFontSize}"
                        Text="{TemplateBinding Content}"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
    </Style>
</ResourceDictionary>